eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy93d3dpbi1naXRodWIuY2lzY28uY29tL0Rldk5ldC90aG91c2FuZGV5ZXMtb3BlcmF0b3IKCnBpcGVsaW5lOgogIGxpbnQ6CiAgICBpbWFnZTogY29udGFpbmVycy5jaXNjby5jb20vZGV2bmV0L2dvbGFuZ2NpLWxpbnQKCiAgdW5pdHRlc3Q6CiAgICBpbWFnZTogY29udGFpbmVycy5jaXNjby5jb20vZGV2bmV0L2dvbGFuZwoKICByZXBvcnQ6CiAgICBpbWFnZTogY29udGFpbmVycy5jaXNjby5jb20vZGV2bmV0L2Ryb25lLXBrZy1wdWJsaXNoZXI6cmVwb3J0CgogIGV2ZW50OgogICAgaW1hZ2U6IGNvbnRhaW5lcnMuY2lzY28uY29tL2Rldm5ldC9kcm9uZS1idWlsZC1ldmVudAoKICBidWlsZDoKICAgIGltYWdlOiBsaWJyYXJ5L2dvbGFuZzoxLjEzLWFscGluZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gQ0dPX0VOQUJMRUQ9MAogICAgICAtIEdPT1M9bGludXgKICAgICAgLSBHT0FSQ0g9YW1kNjQKICAgICAgLSBHTzExMU1PRFVMRT1vbgogICAgICAtIEdPUFJJVkFURT0qLmNpc2NvLmNvbQogICAgY29tbWFuZHM6CiAgICAgIC0gZ28gYnVpbGQgLWEgLXRhZ3MgbmV0Z28gLWxkZmxhZ3MgJy13JyAtbyAuL2Jpbi9tYW5hZ2VyIG1haW4uZ28KCiAgcHVibGlzaC9hd3M6CiAgICBpbWFnZTogcGx1Z2lucy9lY3IKICAgIHJlZ2lvbjogdXMtd2VzdC0yCiAgICByZXBvOiA1MTI1ODM5NTgxMjMuZGtyLmVjci51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9kZXZuZXQvdGUtb3BlcmF0b3IKICAgIHRhZ3M6CiAgICAgIC0gIiR7RFJPTkVfQ09NTUlUOjA6N30iCiAgICAgIC0gbGF0ZXN0CgogIG5vdGlmeToKICAgIGltYWdlOiBjb250YWluZXJzLmNpc2NvLmNvbS9kZXZuZXQvZHJvbmUtc3BhcmsKICAgIGF1dGhfdG9rZW46IE1tWTJOemxpTVdZdE1XUmtNaTAwWXpOakxUZ3hNell0TkdReVptUXdNVFk1WmpFM016QTBaREExTlRVdFltVTQKICAgIHJvb21OYW1lOiAiRGV2TmV0IEJ1aWxkcyIKICAgIG1lc3NhZ2U6IHwKICAgICAgR3JlYXQgam9iIG9uIHlvdXIgbmV3IHRob3VzYW5kZXllcy1vcGVyYXRvciBzZXJ2aWNlIGJ1aWxkLCBkb2NrZXIgaW1hZ2UgbGFiZWw6ICR7RFJPTkVfQ09NTUlUOjA6N30hISEKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzIF0KCiAgbm90aWZ5LWZhaWw6CiAgICBpbWFnZTogY29udGFpbmVycy5jaXNjby5jb20vZGV2bmV0L2Ryb25lLXNwYXJrCiAgICBhdXRoX3Rva2VuOiBNbVkyTnpsaU1XWXRNV1JrTWkwMFl6TmpMVGd4TXpZdE5HUXlabVF3TVRZNVpqRTNNekEwWkRBMU5UVXRZbVU0CiAgICByb29tTmFtZTogIkRldk5ldCBCdWlsZHMiCiAgICBtZXNzYWdlOiAiV2hvb3BzLCB5b3VyIHRob3VzYW5kZXllcy1vcGVyYXRvciBzZXJ2aWNlIGJ1aWxkIGZhaWxlZCEhISIKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBmYWlsdXJlIF0K.r3HuJzsmYZ2ky5bBwXRxvPzSk6hw8WGSsnXICLWyAQ8